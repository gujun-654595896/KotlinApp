def versions = [:]

versions.CORE_KTX = "1.5.0-alpha05"
versions.APPCOMPAT = "1.2.0"
versions.CONSTRAINTLAYOUT = "2.0.2"
versions.AROUTER_COMPILER_VERSION = "1.5.1"
versions.AROUTER_API_VERSION = "1.5.1"
versions.RECYCLERVIEW = "1.0.0"
versions.MATERIAL = "1.2.0"
versions.IMMERSIONBAR = "3.0.0"
versions.DAGGER = "2.30.1"
versions.RETROFIT = "2.9.0"

ext {

    android = [
            compileSdkVersion         : 30,
            buildToolsVersion         : '30.0.2',
            applicationId             : 'com.gujun.kotlinapp',
            minSdkVersion             : 19,
            targetSdkVersion          : 30,
            versionCode               : 1,
            versionName               : '1.0',
            multiDexEnabled           : true,
            applicationIdSuffixDebug  : '.debug',
            applicationIdSuffixRelease: ''
    ]

    androidx = [
            CORE_KTX        : "androidx.core:core-ktx:$versions.CORE_KTX",
            APPCOMPAT       : "androidx.appcompat:appcompat:$versions.APPCOMPAT",
            CONSTRAINTLAYOUT: "androidx.constraintlayout:constraintlayout:$versions.CONSTRAINTLAYOUT",
            RECYCLERVIEW    : "androidx.recyclerview:recyclerview:$versions.RECYCLERVIEW",
            MATERIAL        : "com.google.android.material:material:$versions.MATERIAL"
    ]

    buildConfigDebug = [
            IS_DEBUG: "true"
    ]

    buildConfigRelease = [
            IS_DEBUG: "false"
    ]

    baseLibrary = [
            DATA_BASE: ":base:database",
            NETWORK  : ":base:network",
            UTILS    : ":base:utils"
    ]

    //浸入式状态栏工具
    immersionBar = [
            // 基础依赖包，必须要依赖
            IMMERSIONBAR           : "com.gyf.immersionbar:immersionbar:$versions.IMMERSIONBAR",
            // fragment快速实现（可选）
            IMMERSIONBAR_COMPONENTS: "com.gyf.immersionbar:immersionbar-components:$versions.IMMERSIONBAR",
            // kotlin扩展（可选）
            IMMERSIONBAR_KTX       : "com.gyf.immersionbar:immersionbar-ktx:$versions.IMMERSIONBAR"
    ]

    //依赖注入框架，降低代码耦合
    dagger2 = [
            DAGGER        : "com.google.dagger:dagger:$versions.DAGGER",
            DAGGER_ANDROID: "com.google.dagger:dagger-android:$versions.DAGGER"

    ]

    //ARouter
    arouter = [
            AROUTER: "com.alibaba:arouter-api:$versions.AROUTER_API_VERSION",
    ]

    //注解处理器库，这些库必须放在每个用到的Module的配置中，否则报如下异常
    //A failure occurred while executing org.jetbrains.kotlin.gradle.internal.KaptExecution
    compilerLib = [
            AROUTER_COMPILER: "com.alibaba:arouter-compiler:$versions.AROUTER_COMPILER_VERSION",
            DAGGER_COMPILER : "com.google.dagger:dagger-compiler:$versions.DAGGER"
    ]

    //网络框架retrofit2
    retrofit2 = [
            RETROFIT     : "com.squareup.retrofit2:retrofit:$versions.RETROFIT",
            RETROFIT_GSON: "com.squareup.retrofit2:converter-gson:$versions.RETROFIT"
    ]

}